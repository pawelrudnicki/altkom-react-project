{"version":3,"sources":["actions/ipActions.js","components/map-location/MapLocation.js","components/information-location/InformationLocation.js","components/search-box/SearchBox.js","components/search-history/SearchHistory.js","App.js","reducers/ipReducer.js","reducers/rootReducer.js","index.js","store.js"],"names":["getIpAddressInformation","address","dispatch","state","type","fetch","then","res","json","data","payload","catch","MapLocation","cords","this","props","_","isEmpty","MapContainer","style","height","width","center","zoom","scrollWheelZoom","TileLayer","attribution","url","CircleMarker","React","Component","InformationLocation","informations","className","map","item","name","value","SearchBox","values","handleChange","handleBlur","touched","errors","handleSubmit","Form","onSubmit","Label","Control","onBlur","onChange","placeholder","Button","variant","Text","compose","withFormik","mapPropsToValues","validate","test","changeAddress","obj","currentCords","forEach","sessionStorage","setItem","Date","getTime","JSON","stringify","SearchHistory","historyData","index","time","toDateString","App","addressInformation","get","Object","keys","entries","slice","sort","a","b","parse","loading","getCurrentCoords","currentInformationLocation","getCurrentInformationLocation","history","getHistory","lastInformationLocation","last","Row","Col","xs","lg","connect","ip","ipResponse","fetchingAddress","initialValue","combineReducers","action","ReactDOM","render","store","createStore","rootReducer","applyMiddleware","thunk","logger","document","getElementById"],"mappings":"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","file":"static/js/main.0be17dd8.chunk.js","sourcesContent":["export function getIpAddressInformation(address = \"79.186.213.87\") {\r\n    return function (dispatch, state) {\r\n        dispatch({type: \"GET_IP_ADDRESS_PENDING\"});\r\n        return fetch(`http://api.ipstack.com/${address}?access_key=81e4b051be5d5c421efad3cc439b7a2a&format=1`)\r\n            .then((res) => res.json())\r\n            .then((data) => dispatch({type: \"GET_IP_ADDRESS_FULFILLED\", payload: data}))\r\n            .catch(() => dispatch({type: \"GET_IP_ADDRESS_REJECTED\"}))\r\n    }\r\n}","import React from \"react\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"./_map-location.scss\";\r\nimport {CircleMarker, MapContainer, TileLayer} from \"react-leaflet\";\r\nimport _ from \"lodash\";\r\n\r\nexport default class MapLocation extends React.Component {\r\n    render() {\r\n        const {cords} = this.props;\r\n        if (!cords || _.isEmpty(cords)) return \"No history.\";\r\n        return (\r\n            <MapContainer style={{height: \"100%\", width: \"100%\"}} center={cords} zoom={13} scrollWheelZoom={false}>\r\n                <TileLayer attribution={\"\"} url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'/>\r\n                <CircleMarker center={cords}/>\r\n            </MapContainer>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class InformationLocation extends React.Component {\r\n\r\n    render() {\r\n        const {informations} = this.props;\r\n        return (\r\n            <div className=\"border-info\">\r\n                {\r\n                    informations.map((item) => (\r\n                        <div className=\"d-flex flex-column\">\r\n                            <span>\r\n                                <strong>{item.name}: </strong>\r\n                                {item.value}\r\n                            </span>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {compose} from \"redux\";\r\nimport {withFormik} from \"formik\";\r\n\r\nfunction validate(values) {\r\n    const errors = {};\r\n    if (!values.address) errors.address = \"Required.\";\r\n    if (!/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(values.address)) {\r\n        errors.address = \"Wrong address.\";\r\n    }\r\n    return errors;\r\n}\r\n\r\nfunction submit(values, {props}) {\r\n    props.changeAddress(values.address);\r\n    const obj = {\r\n        address: values.address,\r\n        cords: props.currentCords,\r\n    };\r\n    props.informations.forEach((item) => obj[item.name] = item.value);\r\n    sessionStorage.setItem(`${new Date().getTime()}`, JSON.stringify(obj));\r\n}\r\n\r\nclass SearchBox extends React.Component {\r\n\r\n    render() {\r\n        const {values, handleChange, handleBlur, touched, errors, handleSubmit} = this.props;\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Label>\r\n                    Search location:\r\n                </Form.Label>\r\n                <div className=\"d-flex\">\r\n                    <Form.Control\r\n                        name={\"address\"}\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.address}\r\n                        type={\"text\"}\r\n                        placeholder={\"Please provide IP address\"}\r\n                    />\r\n                    <Button variant={\"primary\"} type={\"submit\"}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n                {\r\n                    errors.address && touched.address &&\r\n                    <Form.Text className=\"text-danger\">\r\n                        {errors.address}\r\n                    </Form.Text>\r\n                }\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withFormik({\r\n        mapPropsToValues: () => ({\r\n            address: \"\"\r\n        }),\r\n        validate,\r\n        handleSubmit: submit\r\n    })\r\n)(SearchBox);\r\n\r\n","import React from \"react\";\r\n\r\nexport default class SearchHistory extends React.Component {\r\n    render() {\r\n        const {historyData = []} = this.props;\r\n        return (\r\n            <div>\r\n                {\r\n                    historyData.map((item, index) =>\r\n                        <div className=\"d-flex\" key={index}>\r\n                            {new Date(item.time).toDateString()}\r\n                            <span>Address: <strong>{item.address}</strong></span>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport \"./_app.scss\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {getIpAddressInformation} from \"./actions/ipActions\";\nimport {Row, Col} from \"react-bootstrap\";\nimport MapLocation from \"./components/map-location/MapLocation\";\nimport InformationLocation from \"./components/information-location/InformationLocation\";\nimport _ from \"lodash\";\nimport SearchBox from \"./components/search-box/SearchBox\";\nimport SearchHistory from \"./components/search-history/SearchHistory\";\n\nfunction mapStateToProps(state) {\n    return {\n        addressInformation: state.ip.ipResponse,\n        loading: state.ip.fetchingAddress,\n    }\n}\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.changeAddress();\n    }\n\n    getCurrentInformationLocation() {\n        const {addressInformation} = this.props;\n        return [\n            {name: \"City\", value: _.get(addressInformation, \"city\", \"\")},\n            {name: \"Continent\", value: _.get(addressInformation, \"continent_name\", \"\")},\n            {name: \"Country\", value: _.get(addressInformation, \"country_name\", \"\")},\n            {name: \"Region\", value: _.get(addressInformation, \"region_name\", \"\")},\n            {name: \"Zip\", value: _.get(addressInformation, \"zip\", \"\")},\n        ];\n    }\n\n    getCurrentCoords() {\n        const {addressInformation} = this.props;\n        return [_.get(addressInformation, \"latitude\", 0), _.get(addressInformation, \"longitude\", 0)];\n    }\n\n    getHistory() {\n        if (Object.keys(sessionStorage) < 2) return [];\n        return Object.entries(sessionStorage).slice().sort((a, b) => +a[0] - +b[0]).map((item) => {\n            const data = JSON.parse(item[1]);\n            return {\n                time: +item[0],\n                address: _.get(data, \"address\", \"\"),\n                cords: _.get(data, \"cords\", \"\"),\n                informations: [\n                    {name: \"City\", value: _.get(data, \"City\", \"\")},\n                    {name: \"Continent\", value: _.get(data, \"Continent\", \"\")},\n                    {name: \"Country\", value: _.get(data, \"Country\", \"\")},\n                    {name: \"Region\", value: _.get(data, \"Region\", \"\")},\n                    {name: \"Zip\", value: _.get(data, \"Zip\", \"\")},\n                ]\n            }\n        })\n    }\n\n    changeAddress = (address) => {\n        this.props.dispatch(getIpAddressInformation(address));\n    }\n\n    render() {\n        const {loading} = this.props;\n        if (loading) return null;\n        const currentCords = this.getCurrentCoords();\n        const currentInformationLocation = this.getCurrentInformationLocation();\n        const history = this.getHistory();\n        const lastInformationLocation = _.get(_.last(history), \"informations\", []);\n        return (\n            <div className=\"App\">\n                <Row>\n                    <Col xs={12} lg={2} className={\"p-4\"}>\n                        <SearchHistory historyData={history}/>\n                    </Col>\n                    <Col xs={12} lg={10}>\n                        <Row className=\"d-flex justify-content-center p-4\">\n                            <Col xs={12} lg={4}>\n                                <MapLocation cords={currentCords}/>\n                            </Col>\n                            <Col xs={12} lg={4}>\n                                <InformationLocation informations={currentInformationLocation}/>\n                            </Col>\n                        </Row>\n                        <Row className=\"d-flex justify-content-center mt-4 mb-4\">\n                            <Col xs={4}>\n                                <SearchBox informations={currentInformationLocation} changeAddress={this.changeAddress}\n                                           currentCords={currentCords}/>\n                            </Col>\n                        </Row>\n                        <Row className=\"d-flex justify-content-center p-4\">\n                            <Col xs={12} lg={4}>\n                                <MapLocation cords={_.get(_.last(history), \"cords\", [])}/>\n                            </Col>\n                            <Col xs={12} lg={4}>\n                                <InformationLocation informations={lastInformationLocation}/>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps)\n)(App);\n","export const initialValue = {\r\n    ipResponse: \"\",\r\n    fetchingAddress: false\r\n};\r\n\r\nexport default function ipReducer(state = initialValue, action) {\r\n    switch (action.type) {\r\n        case \"GET_IP_ADDRESS_PENDING\": {\r\n            return {\r\n                ...state,\r\n                ipResponse: \"\",\r\n                fetchingAddress: true\r\n            }\r\n        }\r\n        case \"GET_IP_ADDRESS_FULFILLED\": {\r\n            return {\r\n                ...state,\r\n                ipResponse: action.payload,\r\n                fetchingAddress: false\r\n            }\r\n        }\r\n        case \"GET_IP_ADDRESS_REJECTED\": {\r\n            return {\r\n                ...state,\r\n                ipResponse: \"\",\r\n                fetchingAddress: false\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport ipReducer from \"./ipReducer\";\r\n\r\nexport default combineReducers({\r\n    ip: ipReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport configureStore from \"./store\";\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import {createStore, applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nexport default function configureStore() {\r\n    return createStore(\r\n        rootReducer,\r\n        applyMiddleware(thunk, logger)\r\n    )\r\n}"],"sourceRoot":""}